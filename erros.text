function Feed({ navigation }) {
  
  const [feed,setFeed]=useState([]);
  useEffect(()=> {
    async function loadFeed(){
      const response =  fetch("http://localhost:3000/feed?_expand=author&_limit=2&_page=1");
      const data = await response.json();
    
      setFeed(data); 
    }
    loadFeed();
  },[] );

  return (
    <SafeAreaView style={styles.backgroundHome}>
      <StatusBar barStyle="dark-content" backgroundColor="#ecf0f1" />
         <FlatList data={feed} 
        keyExtractor={post=> String(post.id)}
        renderItem ={({item})=> {
          <Post>
            <Header>
              <Avatar source={{uri: item.author.avatar}} />
              <Name>{item.author.name}</Name>
            </Header>

            <PostImage ratio={item.aspectRatio} source={{uri:item.image}}/>

            <Description>
            <Name>{item.author.name}</Name>{item.description}
            </Description>

          </Post>
        }}
        />
    </SafeAreaView>
  );
}
import React, { useEffect,useState } from 'react'
import {
  ImageBackground,
  View,
  Text,
  TextInput,
  TouchableOpacity,
  Image,
  StatusBar} from 'react-native';
import { NavigationContainer } from '@react-navigation/native';
import { createStackNavigator } from '@react-navigation/stack';
import { SafeAreaProvider } from 'react-native-safe-area-context';
import SafeAreaView from 'react-native-safe-area-view';
import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';
import {styles} from '../style';
import { Header } from 'react-native/Libraries/NewAppScreen';

function Login({ navigation }) {
  return (
    <SafeAreaView style={styles.backgroundLogin}>
      <StatusBar barStyle="light-content" backgroundColor="#222" />
        <View style={styles.containerLogo}>
          <Image source={require('./image/facubook.png')}/>
        </View>
      <View style={styles.container}>
        <TextInput
          style={styles.input}
          placeholder="Email"
          autoCorrect={false}
          onChangeText={() => {}}
        />

        <TextInput
          style={styles.input}
          placeholder="Senha"
          autoCorrect={false}
          onChangeText={() => {}}
        />

        <TouchableOpacity style={styles.btnSubmit} onPress={()=> navigation.navigate('Home')}>
          <Text style={styles.registerText}>Acessar</Text>
        </TouchableOpacity>

        <TouchableOpacity style={styles.btnRegister}>
          <Text style={styles.registerText}>Criar conta gratuita</Text>
        </TouchableOpacity>
        </View>
    </SafeAreaView>
  );
}
const Tab = createBottomTabNavigator();
////////////////////FEED ///////////////////////
function Feed({ navigation }) {
  return (
    <SafeAreaView style={styles.backgroundHome}>
      <StatusBar barStyle="dark-content" backgroundColor="#ecf0f1" />
      <View><Text>FEED</Text></View>
    </SafeAreaView>
  );
}
function Perfil({ navigation }) {
  return (
    <SafeAreaView style={styles.backgroundHome}>
      <StatusBar barStyle="dark-content" backgroundColor="#222" />
        <Text>Bem Vindo ao seu Perfil</Text>
    </SafeAreaView>
  );
}
function Pesquisa({ navigation }) {
  return (
    <SafeAreaView style={styles.backgroundHome}>
      <StatusBar barStyle="dark-content" backgroundColor="#222" />
      <View>
        <Text>Bem Vindo ao seu Pesquisa</Text>
      </View>
    </SafeAreaView>
  );
}
function HomeTab(){
  return(
    <Tab.Navigator>
      <Tab.Screen name='Feed' component={Feed}/>
      <Tab.Screen name='Pesquisa' component={Pesquisa}/>
      <Tab.Screen name='Perfil'component={Perfil}/>
    </Tab.Navigator>
  )
}

const Stack = createStackNavigator();

export default function App() {
  return (
    <SafeAreaProvider>
      <NavigationContainer>
        <Stack.Navigator headerMode="none">
          <Stack.Screen name="Login" component={Login} />
          <Stack.Screen name="Home" component={HomeTab}/>
        </Stack.Navigator>
      </NavigationContainer>
    </SafeAreaProvider>
  );
}
